<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1755799_edit_and.UpdateRequestItem</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>UpdateRequestItem</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var UpdateRequestItem = Class.create();

UpdateRequestItem.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    updateRequestItemData: function() {
        try {
			// Get request number parameter passed from client
            var requestNumber = this.getParameter("sysparm_number");
            if (!requestNumber) return;
               
			// Get and parse form data (JSON string to object)
			var formDataString = this.getParameter("sysparm_formData");
			var formDataObj = JSON.parse(formDataString);

			// Create secure GlideRecord instance for request item table
            var requestItem = new GlideRecordSecure("sc_req_item");
			// Query request item record by request number
            if (requestItem.get("number", requestNumber)) {
                // Define array of variable fields to update
                var questionFields = ["business_application", "request_for", "comment"];
                var fieldCount = questionFields.length;
                // Loop to update field values (skip empty values)
                for (var i = 0; i < fieldCount; i++) {
                    var field = questionFields[i];
                    var value = formDataObj[field];
					// gs.info("[Server] Processing field: " + field + " = " + value); // Debug               
					if (value !== null && value !== "") {
						requestItem.variables[field] = value;
					}
                }
			// Set request item state to "2" (typically "Work In Progress")
            requestItem.state = "2";
			// Save updates and return operation result
            return requestItem.update() ? "true" : "false: Update failed";          
            }
		} catch (e) {
				return e.message;
		}
    },
    type: 'UpdateRequestItem'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-12 00:54:45</sys_created_on>
        <sys_id>5660b68e47cee25028da392f316d437f</sys_id>
        <sys_mod_count>62</sys_mod_count>
        <sys_name>UpdateRequestItem</sys_name>
        <sys_package display_value="Edit and Resubmit" source="x_1755799_edit_and">2d370bf3477de61028da392f316d4377</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Edit and Resubmit">2d370bf3477de61028da392f316d4377</sys_scope>
        <sys_update_name>sys_script_include_5660b68e47cee25028da392f316d437f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-12 08:51:06</sys_updated_on>
    </sys_script_include>
</record_update>
